/*
 * Copyright (C) 2014. EMBL, European Bioinformatics Institute
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package uk.ac.ebi.osra;

import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import org.openscience.cdk.interfaces.IAtomContainer;
import uk.ac.ebi.app.OSRAChem;
import uk.ac.ebi.utils.CDKUtil;
import uk.ac.ebi.utils.Utility;

/**
 *
 * @author Vishal Siramshetty <vishal[at]ebi.ac.uk>
 */
public class OSRAResult extends javax.swing.JFrame {

    ImageIcon icon;
    String filePath = null;
    JFrame frame;

    /**
     * Creates new form OSRAResult
     */
    public OSRAResult() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        resultPanel = new javax.swing.JPanel();
        structure = new javax.swing.JLabel();
        smiles = new javax.swing.JLabel();
        inchi = new javax.swing.JLabel();
        inchiKey = new javax.swing.JLabel();
        logP = new javax.swing.JLabel();
        tpsa = new javax.swing.JLabel();
        mass = new javax.swing.JLabel();
        smiles1 = new javax.swing.JTextField();
        inchi1 = new javax.swing.JTextField();
        inchiKey1 = new javax.swing.JTextField();
        logP1 = new javax.swing.JTextField();
        tpsa1 = new javax.swing.JTextField();
        mass1 = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        saveAs = new javax.swing.JMenu();
        saveAsMol = new javax.swing.JMenuItem();
        saveAsSDF = new javax.swing.JMenuItem();
        saveAsImage = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("OSRA Result");
        setResizable(false);

        resultPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        resultPanel.setPreferredSize(new java.awt.Dimension(300, 535));

        structure.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        smiles.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        smiles.setText("SMILES");

        inchi.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        inchi.setText("InChI");

        inchiKey.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        inchiKey.setText("InChI Key");

        logP.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        logP.setText("Log P");

        tpsa.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        tpsa.setText("TPSA");

        mass.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        mass.setText("Mass");

        smiles1.setFont(new java.awt.Font("Lucida Sans", 0, 11)); // NOI18N

        inchi1.setFont(new java.awt.Font("Lucida Sans", 0, 11)); // NOI18N
        inchi1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inchi1ActionPerformed(evt);
            }
        });

        inchiKey1.setFont(new java.awt.Font("Lucida Sans", 0, 11)); // NOI18N
        inchiKey1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inchiKey1ActionPerformed(evt);
            }
        });

        logP1.setFont(new java.awt.Font("Lucida Sans", 0, 11)); // NOI18N

        tpsa1.setFont(new java.awt.Font("Lucida Sans", 0, 11)); // NOI18N
        tpsa1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tpsa1ActionPerformed(evt);
            }
        });

        mass1.setFont(new java.awt.Font("Lucida Sans", 0, 11)); // NOI18N

        javax.swing.GroupLayout resultPanelLayout = new javax.swing.GroupLayout(resultPanel);
        resultPanel.setLayout(resultPanelLayout);
        resultPanelLayout.setHorizontalGroup(
            resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(structure, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(resultPanelLayout.createSequentialGroup()
                        .addComponent(mass)
                        .addGap(46, 46, 46)
                        .addComponent(mass1, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                        .addGap(6, 6, 6))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resultPanelLayout.createSequentialGroup()
                        .addGroup(resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tpsa)
                            .addComponent(logP))
                        .addGap(44, 44, 44)
                        .addGroup(resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(logP1)
                            .addGroup(resultPanelLayout.createSequentialGroup()
                                .addComponent(tpsa1)
                                .addGap(1, 1, 1)))
                        .addGap(5, 5, 5))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resultPanelLayout.createSequentialGroup()
                        .addGroup(resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(inchiKey)
                            .addComponent(inchi)
                            .addComponent(smiles))
                        .addGap(18, 18, 18)
                        .addGroup(resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(smiles1)
                            .addComponent(inchi1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(inchiKey1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE))
                        .addGap(5, 5, 5)))
                .addContainerGap())
        );
        resultPanelLayout.setVerticalGroup(
            resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(structure, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(smiles, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(smiles1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inchi, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inchi1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inchiKey, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inchiKey1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(logP, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(logP1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tpsa, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tpsa1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mass1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mass, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(11, 11, 11))
        );

        jMenuBar1.setBackground(new java.awt.Color(223, 223, 223));
        jMenuBar1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jMenuBar1.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        jMenuBar1.setPreferredSize(new java.awt.Dimension(310, 25));

        saveAs.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        saveAs.setText("Save");

        saveAsMol.setText("MOL File");
        saveAsMol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAsMolActionPerformed(evt);
            }
        });
        saveAs.add(saveAsMol);

        saveAsSDF.setText("SD File");
        saveAsSDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAsSDFActionPerformed(evt);
            }
        });
        saveAs.add(saveAsSDF);

        saveAsImage.setText("Image");
        saveAsImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAsImageActionPerformed(evt);
            }
        });
        saveAs.add(saveAsImage);

        jMenuBar1.add(saveAs);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(resultPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(resultPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 557, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveAsMolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAsMolActionPerformed
        String smile = smiles1.getText().trim();
        IAtomContainer molecule = CDKUtil.IO.loadMoleculeFromSMILES(smile);
        CDKUtil.IO.saveAsMOLFile(molecule, null);
        Utility.UI.showInfoMessage(getRootPane(), "MOL file saved to directory: \"" + System.getProperty("user.home") + "/\"");
    }//GEN-LAST:event_saveAsMolActionPerformed

    private void saveAsSDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAsSDFActionPerformed
        String smile = smiles1.getText().trim();
        IAtomContainer molecule = CDKUtil.IO.loadMoleculeFromSMILES(smile);
        CDKUtil.IO.saveAsSDFWithProperties(molecule, null);
        Utility.UI.showInfoMessage(getRootPane(), "SD file saved to directory: \"" + System.getProperty("user.home") + "/\"");
    }//GEN-LAST:event_saveAsSDFActionPerformed

    private void saveAsImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAsImageActionPerformed
        // saves the structure as an Image
        File fileToSave = Utility.UI.saveFile(structure);

        Image img = icon.getImage();
        BufferedImage bi = new BufferedImage(img.getWidth(null), img.getHeight(null), BufferedImage.TYPE_INT_ARGB);
        Graphics2D g2 = bi.createGraphics();
        g2.drawImage(img, 0, 0, null);
        g2.dispose();
        try {
            ImageIO.write(bi, "png", fileToSave);
        } catch (IOException ex) {
            Logger.getLogger(OSRAChem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_saveAsImageActionPerformed

    private void tpsa1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tpsa1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tpsa1ActionPerformed

    private void inchiKey1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inchiKey1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inchiKey1ActionPerformed

    private void inchi1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inchi1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inchi1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OSRAResult.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OSRAResult.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OSRAResult.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OSRAResult.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OSRAResult().setVisible(true);
            }
        });
    }

    // ****************************** getters and setters *************************
    // ****************************************************************************

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel inchi;
    private javax.swing.JTextField inchi1;
    private javax.swing.JLabel inchiKey;
    private javax.swing.JTextField inchiKey1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JLabel logP;
    private javax.swing.JTextField logP1;
    private javax.swing.JLabel mass;
    private javax.swing.JTextField mass1;
    private javax.swing.JPanel resultPanel;
    private javax.swing.JMenu saveAs;
    private javax.swing.JMenuItem saveAsImage;
    private javax.swing.JMenuItem saveAsMol;
    private javax.swing.JMenuItem saveAsSDF;
    private javax.swing.JLabel smiles;
    private javax.swing.JTextField smiles1;
    private javax.swing.JLabel structure;
    private javax.swing.JLabel tpsa;
    private javax.swing.JTextField tpsa1;
    // End of variables declaration//GEN-END:variables

    public javax.swing.JTextField getInchi1() {
        return inchi1;
    }

    public void setInchi1(javax.swing.JTextField inchi1) {
        this.inchi1 = inchi1;
    }

    public javax.swing.JTextField getInchiKey1() {
        return inchiKey1;
    }

    public void setInchiKey1(javax.swing.JTextField inchiKey1) {
        this.inchiKey1 = inchiKey1;
    }

    public javax.swing.JTextField getLogP1() {
        return logP1;
    }

    public void setLogP1(javax.swing.JTextField logP1) {
        this.logP1 = logP1;
    }

    public javax.swing.JTextField getMass1() {
        return mass1;
    }

    public void setMass1(javax.swing.JTextField mass1) {
        this.mass1 = mass1;
    }

    public javax.swing.JTextField getSmiles1() {
        return smiles1;
    }

    public void setSmiles1(javax.swing.JTextField smiles1) {
        this.smiles1 = smiles1;
    }

    public javax.swing.JLabel getStructure() {
        return structure;
    }

    public void setStructure(javax.swing.JLabel structure) {
        this.structure = structure;
    }

    public javax.swing.JTextField getTpsa1() {
        return tpsa1;
    }

    public void setTpsa1(javax.swing.JTextField tpsa1) {
        this.tpsa1 = tpsa1;
    }

    public ImageIcon getIcon() {
        return icon;
    }

    public void setIcon(ImageIcon icon) {
        this.icon = icon;
    }

}
